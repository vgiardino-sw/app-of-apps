apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: monitoring
    server: {{ .Values.spec.destination.server }}
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: grafana
    targetRevision: 8.4.5
    helm:
      values: |
        dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
            - disableDeletion: false
              editable: true
              folder: ""
              name: default
              options:
                path: /var/lib/grafana/dashboards/default
              type: file
        datasources:
          datasource.yaml:
            apiVersion: 1
            datasources:
            - access: proxy
              isDefault: true
              name: Prometheus
              type: prometheus
              url: http://prometheus-server
        sidecar:
          dashboards:
            annotations:
              k8s-sidecar-target-directory: /tmp/dashboards/kubernetes
            enabled: true
            folder: /tmp/dashboards
            label: grafana_dashboard
            provider:
              allowUiUpdates: true
              foldersFromFilesStructure: true

        ingress:
          enabled: true
          ingressClassName: external-nginx
          annotations:
            cert-manager.io/cluster-issuer: staging
            nginx.ingress.kubernetes.io/server-snippet: |
              location /metrics {
                deny all;
              }
          labels: {}
          path: /
          pathType: Prefix
          hosts:
            - grafana.techtitans.website
          tls:
            - secretName: fastapi-tls-secret
              hosts:
                - grafana.techtitans.website
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true